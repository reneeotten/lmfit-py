# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

stages:

- stage: check_codestyle
  jobs:
    - job: pre_commit
      pool:
        vmImage: 'ubuntu-latest'

      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.9'
        - script: |
            python -m pip install --upgrade pip setuptools
            pip install pre-commit
          displayName: 'Install Python dependencies'
        - script: |
            pre-commit autoupdate ; pre-commit run --all-files
          displayName: 'Run pre-commit hooks'

            ##- stage: tests_minimum_dependencies
            ##  dependsOn: check_codestyle
            ##  jobs:
            ##    - job:
            ##      pool:
            ##        vmImage: 'ubuntu-latest'
            ##      strategy:
            ##        matrix:
            ##          Python36:
            ##            python.version: '3.6'
            ##          Python37:
            ##            python.version: '3.7'
            ##          Python38:
            ##            python.version: '3.8'
            ##          Python39:
            ##            python.version: '3.9'
            ##
            ##      steps:
            ##        - task: UsePythonVersion@0
            ##          inputs:
            ##            versionSpec: '$(python.version)'
            ##          displayName: 'Use Python $(python.version)'
            ##        - script: |
            ##            sudo apt update && sudo apt install -yq --no-install-suggests --no-install-recommends \
            ##            libatlas-base-dev liblapack-dev gfortran libgmp-dev libmpfr-dev libsuitesparse-dev ccache \
            ##            swig libmpc-dev
            ##          displayName: 'Install dependencies'
            ##        - script: |
            ##            python -m pip install --upgrade pip setuptools
            ##            pip install asteval==0.9.21 numpy==1.18 scipy==1.3.2 uncertainties==3.0.1 pytest coverage codecov
            ##          displayName: 'Install minimum required version of dependencies'
            ##        - script: |
            ##            python setup.py install
            ##          displayName: 'Install lmfit'
            ##        - script: |
            ##            pip list
            ##          displayName: 'List installed Python packages'
            ##        - script: |
            ##            pip install pytest-azurepipelines
            ##            pytest
            ##          displayName: 'Run test-suite'
            ##
            ##- stage: tests_latest_dependencies
            ##  dependsOn: check_codestyle
            ##  jobs:
            ##    - job:
            ##      pool:
            ##        vmImage: 'ubuntu-latest'
            ##      strategy:
            ##        matrix:
            ##          Python36:
            ##            python.version: '3.6'
            ##          Python37:
            ##            python.version: '3.7'
            ##          Python38:
            ##            python.version: '3.8'
            ##          Python39:
            ##            python.version: '3.9'
            ##
            ##      steps:
            ##        - task: UsePythonVersion@0
            ##          inputs:
            ##            versionSpec: '$(python.version)'
            ##          displayName: 'Use Python $(python.version)'
            ##        - script: |
            ##            sudo apt update && sudo apt install -yq --no-install-suggests --no-install-recommends \
            ##            libatlas-base-dev liblapack-dev gfortran libgmp-dev libmpfr-dev libsuitesparse-dev ccache \
            ##            swig libmpc-dev
            ##          displayName: 'Install dependencies'
            ##        - script: |
            ##            python -m pip install --upgrade pip setuptools
            ##            pip install -r requirements-dev.txt
            ##          displayName: 'Install latests available versions of Python dependencies'
            ##        - script: |
            ##            python setup.py install
            ##          displayName: 'Install lmfit'
            ##        - script: |
            ##            pip list
            ##          displayName: 'List installed Python packages'
            ##        - script: |
            ##            pip install pytest-azurepipelines
            ##            pytest
            ##          displayName: 'Run test-suite'

- stage: development_version
  dependsOn: check_codestyle
  jobs:
    - job: Python310_dev
      continueOnError: True
      pool:
        vmImage: 'ubuntu-latest'
      steps:
        - script: |
            sudo add-apt-repository ppa:deadsnakes/nightly
            sudo apt-get update
            sudo apt-get install -y --no-install-recommends python3.10-dev python3.10-distutils
          displayName: Install Python development version from the deadsnakes PPA
        - script: |
            sudo apt update && sudo apt install -yq --no-install-suggests --no-install-recommends \
            libatlas-base-dev liblapack-dev gfortran libgmp-dev libmpfr-dev libsuitesparse-dev ccache \
            swig libmpc-dev
          displayName: 'Install dependencies'
        - script: |
            export PATH=/home/vsts/.local/bin:$PATH
            curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
            python3.10 get-pip.py --user
            pip3.10 install -r requirements-dev.txt -U --user
          displayName: 'Install latests available versions of Python dependencies'
        - script: |
            python3.10 setup.py install --user
          displayName: 'Install lmfit'
        - script: |
            pip3.10 list
          displayName: 'List installed Python packages'
        - script: |
            pip3.10 install pytest-azurepipelines --user
            pytest
          displayName: 'Run test-suite'

            ##- stage: build_documentation
            ##  dependsOn:
            ##  - tests_minimum_dependencies
            ##  - tests_latest_dependencies
            ##  condition: succeeded()
            ##  jobs:
            ##    - job: build_documentation
            ##      pool:
            ##        vmImage: 'ubuntu-latest'
            ##
            ##      steps:
            ##        - task: UsePythonVersion@0
            ##          inputs:
            ##            versionSpec: '3.9'
            ##        - script: |
            ##            python -m pip install --upgrade pip setuptools
            ##            pip install -r requirements-dev.txt
            ##          displayName: 'Install Python dependencies'
            ##        - script: |
            ##            python setup.py install
            ##          displayName: 'Install lmfit'
            ##        - script: |
            ##            sudo apt install -qq -y texlive-full
            ##          displayName: 'Install TeX Live'
            ##        - script: |
            ##           cd doc ; make all
            ##          displayName: 'Build the documentation'
